{"title":"正则表达式","date":"2021-01-29T12:43:40.000Z","date_formatted":{"ll":"Jan 29, 2021","L":"01/29/2021","MM-DD":"01-29"},"thumbnail":"/images/20210129/cover.png","link":"Learning/e08f36f1337d","tags":["JavaScript","正则表达式"],"categories":["Learning"],"updated":"2023-11-14T12:07:06.466Z","content":"<p>正则表达式语法学习，常用正则表达式设计（视频讲解）</p>\n<span id=\"more\"></span>\n<p>PPT：<a href=\"https://cloud.189.cn/t/AnAR3uF3UJN3%EF%BC%88%E8%AE%BF%E9%97%AE%E7%A0%81%EF%BC%9Aay78%EF%BC%89\">https://cloud.189.cn/t/AnAR3uF3UJN3（访问码：ay78）</a></p>\n<p>视频回放地址：<a href=\"https://www.bilibili.com/video/BV1Ft4y1B768/\">https://www.bilibili.com/video/BV1Ft4y1B768/</a></p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">\n<iframe src=\"//player.bilibili.com/player.html?aid=628889616&bvid=BV1Ft4y1B768&cid=289579962&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe>\n</div>\n<blockquote>\n<p>以下内容为基本语法，详细请见PPT</p>\n</blockquote>\n<h1 id=\"一、-界定符\">一、 界定符<a title=\"#一、-界定符\" href=\"#一、-界定符\"></a></h1>\n<p><strong>定义</strong>：表示一个正则表达式的开始和结束</p>\n<p>在JavaScript中，界定符以斜线（<code>/</code>）开始和结束：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/正则表达式/</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>可以这样理解</strong>：字符串是通过单引号或者双引号界定，那么正则的界定就好理解了吧。</p>\n<h1 id=\"二、-原子\">二、 原子<a title=\"#二、-原子\" href=\"#二、-原子\"></a></h1>\n<p><strong>定义</strong>：正则表达式中最小的匹配单位</p>\n<p>分为：可见原子、不可见原子（空格、换行符等）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/A/</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/,/</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/ /</span>;</span><br></pre></td></tr></table></figure>\n<p>以上正则表达式中，均只有一个原子。</p>\n<p><strong>可以这样理解</strong>：一篇文章的最小单位是一个文字或者一个单词，他们组合在一起就是一篇文章，正则表达式也是有原子组合而来的。</p>\n<h1 id=\"三、-元字符\">三、 元字符<a title=\"#三、-元字符\" href=\"#三、-元字符\"></a></h1>\n<p><strong>定义</strong>：一系列原子的集合</p>\n<p><strong>作用</strong>：定义原子的筛选方式；对某一类原子归类缩写；</p>\n<p><strong>有三种筛选方式</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原子|原子    <span class=\"comment\">// 表示：或（匹配其中一个原子即可）</span></span><br><span class=\"line\">[原子原子...]  <span class=\"comment\">// 表示：任一（匹配括号里的任一一个原子即可，原子之间不用竖线）</span></span><br><span class=\"line\">[^原子原子...] <span class=\"comment\">// 表示：除此之外（和前一种情况相反）</span></span><br></pre></td></tr></table></figure>\n<p>中括号中，如果原子是连续的（ASCII码），那么可以用横线（<code>-</code>）表示连续：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">0123456789</span>] = [<span class=\"number\">0</span>-<span class=\"number\">9</span>]</span><br><span class=\"line\">[abcdefghijklmn] = [a-n]</span><br></pre></td></tr></table></figure>\n<p><strong>内置原子集合</strong>：</p>\n<div class=\"φbt\"><div class=\"φbv\"><table><thead>\n<tr>\n<th><strong>元字符</strong></th>\n<th><strong>解释</strong></th>\n<th><strong>等价于</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>.</strong></td>\n<td>除换行符之外任意一个字符</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>\\d</strong></td>\n<td>匹配任意一个十进制数</td>\n<td><strong>[0-9]</strong></td>\n</tr>\n<tr>\n<td><strong>\\D</strong></td>\n<td>匹配任意一个非十进制数</td>\n<td><strong>[^0-9]</strong></td>\n</tr>\n<tr>\n<td><strong>\\s</strong></td>\n<td>匹配一个不可见原子</td>\n<td><strong>[\\f\\n\\r\\t\\v]</strong></td>\n</tr>\n<tr>\n<td><strong>\\S</strong></td>\n<td>匹配一个可见原子</td>\n<td><strong>[^\\f\\n\\r\\t\\v]</strong></td>\n</tr>\n<tr>\n<td><strong>\\w</strong></td>\n<td>匹配任意一个数字、字母、下划线</td>\n<td><strong>[0-9a-zA-Z_]</strong></td>\n</tr>\n<tr>\n<td><strong>\\W</strong></td>\n<td>匹配任意一个非数字、字母、下划线</td>\n<td><strong>[^0-9a-zA-Z_]</strong></td>\n</tr>\n</tbody>\n</table></div></div><p><strong>可以这样理解</strong>：单词可以组成一句话，文章是由很多句话组成。元字符也是对一类原子组成的一小段，最终这些元字符汇聚就可以组成正则表达式。</p>\n<h1 id=\"四、-量词\">四、 量词<a title=\"#四、-量词\" href=\"#四、-量词\"></a></h1>\n<p><strong>定义</strong>：描述原子连续出现的次数</p>\n<p><strong>用法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原子&#123;n&#125;      <span class=\"comment\">// 表示要前面紧邻的这个原子要匹配n次</span></span><br><span class=\"line\">原子&#123;n,&#125;     <span class=\"comment\">// 表示要前面紧邻的这个原子要匹配大于等于n次：半开半闭区间 [n, +无穷)</span></span><br><span class=\"line\">原子&#123;n,m&#125;    <span class=\"comment\">// 表示要前面紧邻的这个原子要匹配大于等于n次，小于等于m次：[n, m]</span></span><br></pre></td></tr></table></figure>\n<p><strong>特殊量词</strong>：</p>\n<div class=\"φbt\"><div class=\"φbv\"><table><thead>\n<tr>\n<th><strong>特殊量词</strong></th>\n<th><strong>解释</strong></th>\n<th><strong>等价于</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>匹配&gt;=0次之前的原子（可存在）</td>\n<td>{0,}</td>\n</tr>\n<tr>\n<td><strong>+</strong></td>\n<td>匹配1次或多次之前的原子（存在）</td>\n<td>{1,}</td>\n</tr>\n<tr>\n<td><strong>?</strong></td>\n<td>匹配0次或1次之前的原子（可有可无）</td>\n<td>{0,1}</td>\n</tr>\n</tbody>\n</table></div></div><p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"variable constant_\">ES</span>\\d&#123;<span class=\"number\">4</span>&#125;/     <span class=\"comment\">// 可以匹配到：ES000 ES2015 ES2020等</span></span><br><span class=\"line\"><span class=\"regexp\">/go&#123;2,&#125;gle/</span>   <span class=\"comment\">// 可以匹配到：google gooooooogle等</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"五-边界控制\">五 边界控制<a title=\"#五-边界控制\" href=\"#五-边界控制\"></a></h1>\n<p><strong>定义</strong>：对目标位置的控制，以<code>^</code>表示开始，以<code>$</code>表示结束。</p>\n<p><strong>用法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/go&#123;<span class=\"number\">2</span>,&#125;gle/   <span class=\"comment\">// &quot;This is google website!&quot;  可以匹配</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">/^go&#123;2,&#125;gle/</span>  <span class=\"comment\">// &quot;This is google website!&quot;  匹配失败</span></span><br><span class=\"line\">              <span class=\"comment\">// &quot;google&quot;  可以匹配</span></span><br></pre></td></tr></table></figure>\n<p>此外边界控制还有模式单元<code>()</code>，小括号的作用可以将整体作为一个原子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"title class_\">Dd</span>]  <span class=\"comment\">// 2个原子</span></span><br><span class=\"line\">(D|d) <span class=\"comment\">// 1个原子</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"六-修正模式\">六 修正模式<a title=\"#六-修正模式\" href=\"#六-修正模式\"></a></h1>\n<p><strong>定义</strong>：给正则表达式的匹配过程设定一种模式</p>\n<div class=\"φbt\"><div class=\"φbv\"><table><thead>\n<tr>\n<th><strong>修正表达式</strong></th>\n<th><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>i</strong></td>\n<td>忽略字母大小写</td>\n</tr>\n<tr>\n<td><strong>g</strong></td>\n<td>执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）</td>\n</tr>\n<tr>\n<td><strong>m</strong></td>\n<td>执行多行匹配。</td>\n</tr>\n</tbody>\n</table></div></div><p><strong>用法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/正则表达式/i</span><br></pre></td></tr></table></figure>\n<h1 id=\"七-贪婪模式和懒惰模式\">七 贪婪模式和懒惰模式<a title=\"#七-贪婪模式和懒惰模式\" href=\"#七-贪婪模式和懒惰模式\"></a></h1>\n<p><strong>定义</strong>：</p>\n<p>贪婪模式：在条件允许的范围内，利益最大化（得寸进尺）</p>\n<p>懒惰模式：达到最低标准即可（不思进取）</p>\n<p><strong>用法</strong>：量词后面加<code>？</code>表示懒惰模式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tasssssk   /s+/  匹配结果：sssss  (贪婪模式，可以匹配<span class=\"number\">1</span>个以上的s，那就全匹配)</span><br><span class=\"line\">tasssssk   /s+?/ 匹配结果：s      (懒惰模式，可以匹配<span class=\"number\">1</span>个以上的s，那最低标准<span class=\"number\">1</span>个s)</span><br></pre></td></tr></table></figure>\n<div class=\"φbt\"><div class=\"φbv\"><table><thead>\n<tr>\n<th><strong>贪婪模式</strong></th>\n<th><strong>懒惰模式</strong></th>\n<th><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>?</strong></td>\n<td><strong>??</strong></td>\n<td>匹配0个或1个</td>\n</tr>\n<tr>\n<td><strong>+</strong></td>\n<td><strong>+?</strong></td>\n<td>匹配1个或多个</td>\n</tr>\n<tr>\n<td>*</td>\n<td>*？</td>\n<td>匹配0个或多个</td>\n</tr>\n<tr>\n<td><strong>{n}</strong></td>\n<td><strong>{n}?</strong></td>\n<td>匹配n个</td>\n</tr>\n<tr>\n<td><strong>{n,m}</strong></td>\n<td><strong>{n,m}?</strong></td>\n<td>匹配n个或者m个</td>\n</tr>\n<tr>\n<td><strong>{n,}</strong></td>\n<td><strong>{n,}?</strong></td>\n<td>匹配n个或者多个</td>\n</tr>\n</tbody>\n</table></div></div><h1 id=\"八-神奇的问号?\">八 神奇的问号?<a title=\"#八-神奇的问号?\" href=\"#八-神奇的问号?\"></a></h1>\n<p><strong>正向断言</strong>：<code>(?=原子)</code> 表示后面必须接正向断言的原子，且匹配结果不包括该原子</p>\n<p><strong>负向断言</strong>：<code>(?!原子)</code>表示后面不能接正向断言的原子，匹配结果不包括该原子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"title function_\">string</span>(?=s)/   可以匹配：strings (匹配结果：stirng)  不可以匹配：stringS stringa</span><br><span class=\"line\">/<span class=\"title function_\">string</span>(?!s)/   可以匹配：stringS (匹配结果：string)  不可以匹配：strings</span><br></pre></td></tr></table></figure>\n<p><code>?:</code>产生无编号分组：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正则：/(ab)<span class=\"title function_\">c</span>(ba)/   <span class=\"regexp\">/(?:ab)c(ba)/</span>  <span class=\"regexp\">/((a)(b))(c)/</span></span><br><span class=\"line\">编号：   <span class=\"number\">1</span>    <span class=\"number\">2</span>               <span class=\"number\">1</span>         <span class=\"number\">1</span>    <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n","prev":{"title":"Nest.js大法-上","link":"Learning/3534afa74a70"},"next":{"title":"函数式编程范式","link":"Learning/86cd6788d8fb"},"plink":"https://blog.jschef.com/Learning/e08f36f1337d/","toc":[{"id":"一、-界定符","title":"一、 界定符","index":"1"},{"id":"二、-原子","title":"二、 原子","index":"2"},{"id":"三、-元字符","title":"三、 元字符","index":"3"},{"id":"四、-量词","title":"四、 量词","index":"4"},{"id":"五-边界控制","title":"五 边界控制","index":"5"},{"id":"六-修正模式","title":"六 修正模式","index":"6"},{"id":"七-贪婪模式和懒惰模式","title":"七 贪婪模式和懒惰模式","index":"7"},{"id":"八-神奇的问号?","title":"八 神奇的问号?","index":"8"}],"reward":true,"copyright":{"author":"Chef Wu","link":"<a href=\"https://blog.jschef.com/Learning/e08f36f1337d/\" title=\"正则表达式\">https://blog.jschef.com/Learning/e08f36f1337d/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"January 29, 2021"}}