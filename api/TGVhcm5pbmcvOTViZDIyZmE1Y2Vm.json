{"title":"JavaScript函数问题","date":"2019-07-16T03:33:00.000Z","date_formatted":{"ll":"Jul 16, 2019","L":"07/16/2019","MM-DD":"07-16"},"link":"Learning/95bd22fa5cef","tags":["JavaScript"],"categories":["Learning"],"updated":"2023-11-14T12:07:06.466Z","content":"<h2 id=\"function类型创建\">Function类型创建<a title=\"#function类型创建\" href=\"#function类型创建\"></a></h2>\n<p>  以下三种方法创建的函数作用相同，在使用上几乎也没有区别。区别在最后一章: <strong>函数声明与函数表达式</strong> 。</p>\n<h3 id=\"使用函数声明\">使用函数声明<a title=\"#使用函数声明\" href=\"#使用函数声明\"></a></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span> (num1, num2) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用函数表达式\">使用函数表达式<a title=\"#使用函数表达式\" href=\"#使用函数表达式\"></a></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sum = <span class=\"keyword\">function</span>(<span class=\"params\">num1, num2</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"function构造函数(不推荐)\">Function构造函数(不推荐)<a title=\"#function构造函数(不推荐)\" href=\"#function构造函数(不推荐)\"></a></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sum = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;num1&quot;</span>, <span class=\"string\">&quot;num2&quot;</span>, <span class=\"string\">&quot;return num1 + num2&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"没有重载\">没有重载<a title=\"#没有重载\" href=\"#没有重载\"></a></h2>\n<p>  将函数名理解为指针，就很容易理解为什么没有重载了。再次定义函数将覆盖之前定义的函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addSomeNumber</span>(<span class=\"params\">num</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num + <span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addSomeNumber</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num + <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"title function_\">addSomeNumber</span>(<span class=\"number\">100</span>); <span class=\"comment\">//300</span></span><br></pre></td></tr></table></figure>\n<p>等同于（将函数名理解为指针）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> addSomeNumber = <span class=\"keyword\">function</span> (<span class=\"params\">num</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num + <span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">addSomeNumber = <span class=\"keyword\">function</span> (<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num + <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"title function_\">addSomeNumber</span>(<span class=\"number\">100</span>); <span class=\"comment\">//300</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"函数声明与函数表达式\">函数声明与函数表达式<a title=\"#函数声明与函数表达式\" href=\"#函数声明与函数表达式\"></a></h2>\n<p>先看例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 例1：正常执行</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">num1, num2</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 例2：报错 unexpected identifier</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title function_\">sum2</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum2 = <span class=\"keyword\">function</span>(<span class=\"params\">num1, num2</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>函数声明和函数表达式定义后的作用无区别，但解析器对函数声明和函数表达式并非一视同仁。解析器会先读取所有函数声明，并使这些函数在执行<br>\n任何代码之前可用。至于函数表达式，则必须等到解析器执行到它所在的代码行，才会真正被解释。例2中如果把var sum2表达式放在前面则就不会报错了。</p>\n","prev":{"title":"JavaScript-数据操作","link":"Learning/dfc654fe685e"},"next":{"title":"ES6学习-数组","link":"Learning/4a5a66b21e29"},"plink":"https://blog.jschef.com/Learning/95bd22fa5cef/","toc":[{"id":"function类型创建","title":"Function类型创建","index":"1","children":[{"id":"使用函数声明","title":"使用函数声明","index":"1.1"},{"id":"使用函数表达式","title":"使用函数表达式","index":"1.2"},{"id":"function构造函数(不推荐)","title":"Function构造函数(不推荐)","index":"1.3"}]},{"id":"没有重载","title":"没有重载","index":"2"},{"id":"函数声明与函数表达式","title":"函数声明与函数表达式","index":"3"}],"reward":true,"copyright":{"author":"Chef Wu","link":"<a href=\"https://blog.jschef.com/Learning/95bd22fa5cef/\" title=\"JavaScript函数问题\">https://blog.jschef.com/Learning/95bd22fa5cef/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"July 16, 2019"}}