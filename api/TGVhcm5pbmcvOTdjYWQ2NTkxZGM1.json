{"title":"Nginx用certbot获取Let's Encrypt SSL证书","date":"2019-08-14T02:30:18.000Z","date_formatted":{"ll":"Aug 14, 2019","L":"08/14/2019","MM-DD":"08-14"},"link":"Learning/97cad6591dc5","tags":["Let's Encrypt","SSL","免费SSL证书"],"categories":["Learning"],"updated":"2023-11-14T12:07:06.466Z","content":"<h2 id=\"一、本文环境\">一、本文环境<a title=\"#一、本文环境\" href=\"#一、本文环境\"></a></h2>\n<ul>\n<li>Linux：Ubuntu 20.04</li>\n<li>Nginx</li>\n<li>网站已经能http访问</li>\n</ul>\n<blockquote>\n<p>本文参考自Certbot官网 <a href=\"https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx\" target=\"_blank\">https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"二、关于apache\">二、关于Apache<a title=\"#二、关于apache\" href=\"#二、关于apache\"></a></h2>\n<p>  之前弄过Apache，前面安装一切顺利，使用certbot时就出错，我修复这个错误，又冒出另外一个错误。然后又试了Let’s Encrypt原版安装，在Apache下也不行，也参考了许多文章，网上一大堆Apache下出现这样的问题的文章，怎么解决都不行，所以我放弃了。</p>\n<h2 id=\"三、获取步骤\">三、获取步骤<a title=\"#三、获取步骤\" href=\"#三、获取步骤\"></a></h2>\n<h3 id=\"3.1-确保网站能访问\">3.1 确保网站能访问<a title=\"#3.1-确保网站能访问\" href=\"#3.1-确保网站能访问\"></a></h3>\n<p>  浏览器能http访问，Let’s Encrypt下发证书时会验证的，不能访问是获取不了的。</p>\n<h3 id=\"3.2-添加ppa源\">3.2 添加PPA源<a title=\"#3.2-添加ppa源\" href=\"#3.2-添加ppa源\"></a></h3>\n<p>  依次执行下面命令，如遇到需要Y/N的就按Y，在第四条添加PPA时，需要按Enter键确认。</p>\n<blockquote>\n<p>命令均在root用户下执行，普通用户需前面加sudo指令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install software-properties-common</span><br><span class=\"line\">add-apt-repository universe</span><br><span class=\"line\">add-apt-repository ppa:certbot/certbot</span><br><span class=\"line\">apt-get update</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.3-安装python3\">3.3 安装Python3<a title=\"#3.3-安装python3\" href=\"#3.3-安装python3\"></a></h3>\n<p>  先安装python3</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install python3</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.4-安装certbot\">3.4 安装Certbot<a title=\"#3.4-安装certbot\" href=\"#3.4-安装certbot\"></a></h3>\n<p>  执行以下命令，遇到需要确认就Y确认。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.5-获取并安装证书\">3.5 获取并安装证书<a title=\"#3.5-获取并安装证书\" href=\"#3.5-获取并安装证书\"></a></h3>\n<ul>\n<li>执行命令 <code>certbot --nginx</code> ；</li>\n<li>执行过程中，需要输入你的邮箱，他们会向邮箱发一些更新和安全注意事件；</li>\n<li>之后就Agree/Yes吧；</li>\n<li>Which names would you like to activate HTTPS for? 这里需要选择你要获取证书的域名，下面已经罗列出来了。\n<ul>\n<li>选一个：输入域名对应数字；</li>\n<li>多选：输入对应数字，以逗号或者空格隔开；</li>\n<li>全选：不用输入，留空</li>\n</ul>\n</li>\n<li>Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.这一步是选择是否将http访问强制重定向到https，下面提供俩个选择，建议选择2 Redirect，下面输入数字2确认即可。选择2原因：曾经某次，我发现自己没用重定向https，当使用http访问网站时，php没解析，直接将源代码显示出来了。</li>\n<li>Congratulations! 恭喜，证书获取并安装完成了！证书有效期90天。</li>\n<li>最后，自己浏览器直接输域名试试吧。如果不能访问，请确认服务器安全规则443端口已打开。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">certbot --nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Saving debug <span class=\"built_in\">log</span> to /var/log/letsencrypt/letsencrypt.log</span><br><span class=\"line\">Plugins selected: Authenticator nginx, Installer nginx</span><br><span class=\"line\">Enter email address (used <span class=\"keyword\">for</span> urgent renewal and security notices) (Enter <span class=\"string\">&#x27;c&#x27;</span> to</span><br><span class=\"line\">cancel): xxxxxx@qq.com</span><br><span class=\"line\">Starting new HTTPS connection (1): acme-v02.api.letsencrypt.org</span><br><span class=\"line\"></span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">Please <span class=\"built_in\">read</span> the Terms of Service at</span><br><span class=\"line\">https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must</span><br><span class=\"line\">agree <span class=\"keyword\">in</span> order to register with the ACME server at</span><br><span class=\"line\">https://acme-v02.api.letsencrypt.org/directory</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">(A)gree/(C)ancel: a</span><br><span class=\"line\"></span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">Would you be willing to share your email address with the Electronic Frontier</span><br><span class=\"line\">Foundation, a founding partner of the Let<span class=\"string\">&#x27;s Encrypt project and the non-profit</span></span><br><span class=\"line\"><span class=\"string\">organization that develops Certbot? We&#x27;</span>d like to send you email about our work</span><br><span class=\"line\">encrypting the web, EFF news, campaigns, and ways to support digital freedom.</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">(Y)es/(N)o: y</span><br><span class=\"line\">Starting new HTTPS connection (1): supporters.eff.org</span><br><span class=\"line\"></span><br><span class=\"line\">Which names would you like to activate HTTPS <span class=\"keyword\">for</span>?</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">1: a.zzboy.cn</span><br><span class=\"line\">2: b.zzboy.cn</span><br><span class=\"line\">3: c.zzboy.cn</span><br><span class=\"line\">4: d.zzboy.cn</span><br><span class=\"line\">5: e.zzboy.cn</span><br><span class=\"line\">6: f.zzboy.cn</span><br><span class=\"line\">7: g.zzboy.cn</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">Select the appropriate numbers separated by commas and/or spaces, or leave input</span><br><span class=\"line\">blank to <span class=\"keyword\">select</span> all options shown (Enter <span class=\"string\">&#x27;c&#x27;</span> to cancel): 5</span><br><span class=\"line\">Obtaining a new certificate</span><br><span class=\"line\">Performing the following challenges:</span><br><span class=\"line\">http-01 challenge <span class=\"keyword\">for</span> e.zzboy.cn</span><br><span class=\"line\">Waiting <span class=\"keyword\">for</span> verification...</span><br><span class=\"line\">Cleaning up challenges</span><br><span class=\"line\">Resetting dropped connection: acme-v02.api.letsencrypt.org</span><br><span class=\"line\">Deploying Certificate to VirtualHost /etc/nginx/conf.d/e.zzboy.cn.conf</span><br><span class=\"line\"></span><br><span class=\"line\">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">1: No redirect - Make no further changes to the webserver configuration.</span><br><span class=\"line\">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this <span class=\"keyword\">for</span></span><br><span class=\"line\">new sites, or <span class=\"keyword\">if</span> you<span class=\"string\">&#x27;re confident your site works on HTTPS. You can undo this</span></span><br><span class=\"line\"><span class=\"string\">change by editing your web server&#x27;</span>s configuration.</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">Select the appropriate number [1-2] <span class=\"keyword\">then</span> [enter] (press <span class=\"string\">&#x27;c&#x27;</span> to cancel): 2</span><br><span class=\"line\">Redirecting all traffic on port 80 to ssl <span class=\"keyword\">in</span> /etc/nginx/conf.d/e.zzboy.cn.conf</span><br><span class=\"line\"></span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\">Congratulations! You have successfully enabled https://e.zzboy.cn</span><br><span class=\"line\">.....</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、多个域名使用同一证书\">四、多个域名使用同一证书<a title=\"#四、多个域名使用同一证书\" href=\"#四、多个域名使用同一证书\"></a></h2>\n<p>命令：<br>\n<code>sudo certbot certonly --cert-name example.com -d www.example.com,m.example.com</code><br>\n  cert-name是指定证书的名称，可不加。-d则是该证书包含有效的域名。<br>\n  多个域名可逗号隔开，也可以添加多个-d。</p>\n<h2 id=\"五、手动安装域名\">五、手动安装域名<a title=\"#五、手动安装域名\" href=\"#五、手动安装域名\"></a></h2>\n<p>  通过<code>certbot certonly</code>命令是仅仅获取SSL证书，需要自己手动安装。在站点配置文件<code>/etc/nginx/conf.d/youdomain.com.conf</code>的server里加一段。其中证书位置在<code>/etc/letsencrypt/live/youdomain.com/</code>目录下，可以自己先确认，也可以将证书移到其他位置。<br>\n  配置完成后重载nginx：<code>systemctl reload nginx</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">  <span class=\"comment\">#</span></span><br><span class=\"line\">  <span class=\"comment\">#前面省略一大段</span></span><br><span class=\"line\">  <span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#监听443端口</span></span><br><span class=\"line\">  listen 443 ssl;</span><br><span class=\"line\">  <span class=\"comment\">#fullchain证书位置</span></span><br><span class=\"line\">  ssl_certificate /etc/letsencrypt/live/youdomain.com/fullchain.pem;</span><br><span class=\"line\">  <span class=\"comment\">#私钥</span></span><br><span class=\"line\">  ssl_certificate_key /etc/letsencrypt/live/youdomain.com/privkey.pem;</span><br><span class=\"line\">  <span class=\"comment\">#letsencrypt为nginx的配置</span></span><br><span class=\"line\">  include /etc/letsencrypt/options-ssl-nginx.conf;</span><br><span class=\"line\">  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>fullchain.pem：</strong> 是cert.pem（服务器证书本身）和chain.pem（Web浏览器为验证服务器证书）的中间证书，它包含这两个证书。</p>\n<blockquote>\n<p>Let’s Encrypt engineer: fullchain.pem is a concatenation of cert.pem and chain.pem</p>\n</blockquote>\n<h2 id=\"六、nginx手动配置http转https\">六、Nginx手动配置http转https<a title=\"#六、nginx手动配置http转https\" href=\"#六、nginx手动配置http转https\"></a></h2>\n<ul>\n<li>将站点配置文件监听80端口那行去掉；</li>\n<li>在站点配置文件最下方额外加一个server，内容如下：将访问域名301重定向到https路径。同时监听80端口，有强制http访问的返回404；</li>\n<li>配置完成后重载nginx：<code>systemctl reload nginx</code></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#前面省略一大段：原站点配置</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> = youdomain.com) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name youdomain.com;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 404;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果该配置文件有多个域名，if语句块中要加break，否者会报错。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#前面省略一大段：原站点配置</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> = www.youdomain.com) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">        <span class=\"built_in\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> = blog.youdomain.com) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">        <span class=\"built_in\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name www.youdomain.com blog.youdomain.com;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 404;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"七、到期更新\">七、到期更新<a title=\"#七、到期更新\" href=\"#七、到期更新\"></a></h2>\n<p>命令：<br>\n<code>certbot renew</code><br>\n  需要证书到期前30内更新。</p>\n<h2 id=\"八、到期自动更新\">八、到期自动更新<a title=\"#八、到期自动更新\" href=\"#八、到期自动更新\"></a></h2>\n<p>  需要使用shell脚本，给系统加定时任务，可以百度一大堆，以下是我自己写的，可以输出更新日志：</p>\n<p><strong>第一步</strong>：找个目录新建一个shell脚本文件，我这里是在/home目录下，<a href=\"http://xn--renewCert-u75noor9ap93l.sh\">建了一个renewCert.sh</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">更新证书并记录</span></span><br><span class=\"line\">echo `date &quot;+%Y-%m-%d %H:%M:%S&quot;` &gt;&gt; /home/renewCert.log</span><br><span class=\"line\">certbot renew | grep -A 20 &quot;The following&quot; &gt;&gt; /home/renewCert.log</span><br><span class=\"line\">echo -e &quot;\\n&quot; &gt;&gt; /home/renewCert.log</span><br></pre></td></tr></table></figure>\n<p><strong>第二步</strong>：创建linux自动任务</p>\n<p>执行命令：crontab -e  (初次使用选择vim-basic)</p>\n<p>找一行空白处，添加：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每周6凌晨30分更新证书</span></span><br><span class=\"line\">30 0 * * 6 bash /home/renewCert.sh</span><br></pre></td></tr></table></figure>\n<p>日志renewCert.log：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-02-08 00:30:01</span><br><span class=\"line\">The following certs are not due for renewal yet:</span><br><span class=\"line\">  path/to/fullchain.pem expires on 2020-03-11 (skipped)</span><br><span class=\"line\">No renewals were attempted.</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class=\"line\"></span><br><span class=\"line\">2020-02-15 00:30:01</span><br><span class=\"line\">The following certs are not due for renewal yet:</span><br><span class=\"line\">  path/to/fullchain.pem expires on 2020-05-10 (skipped)</span><br><span class=\"line\">No renewals were attempted.</span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>\n<h2 id=\"九、附：certbot命令\">九、附：Certbot命令<a title=\"#九、附：certbot命令\" href=\"#九、附：certbot命令\"></a></h2>\n<blockquote>\n<p>参考自四个空格网：<a href=\"https://www.4spaces.org/certbot-command-line-tool-usage-document/\" target=\"_blank\">https://www.4spaces.org/certbot-command-line-tool-usage-document/</a></p>\n</blockquote>\n<h3 id=\"9.1-用法\">9.1 用法<a title=\"#9.1-用法\" href=\"#9.1-用法\"></a></h3>\n<p><code>certbot [子命令] [选项] [-d 域名] [-d 域名]</code></p>\n<p>  Certbot工具用于获取和安装 HTTPS/TLS/SSL 证书。默认情况下，Certbot会尝试为本地网页服务器(如果不存在会默认安装一个到本地)获取并安装证书。最常用的子命令和选项如下:</p>\n<h3 id=\"9.2-获取,-安装,-更新证书\">9.2 获取, 安装, 更新证书<a title=\"#9.2-获取,-安装,-更新证书\" href=\"#9.2-获取,-安装,-更新证书\"></a></h3>\n<ul>\n<li>(默认) run：获取并安装证书到当前网页服务器；</li>\n<li>certonly：获取或更新证书，但是不安装；</li>\n<li>renew ：更新已经获取但快过期的所有证书；</li>\n<li>-d 域名列表：指定证书对应的域名列表，域名之间使用逗号分隔；</li>\n<li>–apache：使用Apache插件进行身份认证和安装</li>\n<li>–standalone：运行一个独立的网页服务器用于身份认证</li>\n<li>–nginx：用Nginx插件进行身份认证和安装</li>\n<li>–webroot：把身份认证文件放置在服务器的网页根目录下；</li>\n<li>–manual： 使用交互式或脚本钩子的方式获取证书；</li>\n<li>-n：非交互式运行；</li>\n<li>–test-cert：从预交付服务器上获取测试证书</li>\n<li>–dry-run：测试获取或更新证书，但是不存储到本地硬盘；</li>\n</ul>\n<h3 id=\"9.3-证书管理\">9.3 证书管理<a title=\"#9.3-证书管理\" href=\"#9.3-证书管理\"></a></h3>\n<ul>\n<li>certificates:显示使用Certbot生成的所有证书的信息；</li>\n<li>revoke：撤销证书(supply –cert-path)；</li>\n<li>delete：删除证书；</li>\n</ul>\n<h3 id=\"9.4-管理你的let’s-encrypt账户\">9.4 管理你的Let’s Encrypt账户<a title=\"#9.4-管理你的let’s-encrypt账户\" href=\"#9.4-管理你的let’s-encrypt账户\"></a></h3>\n<ul>\n<li>register：创建Let’s Encrypt ACME账户；</li>\n<li>–agree-tos：同意ACME服务器的订阅协议；</li>\n<li>-m EMAIL：接收有关账户的重要通知的邮箱地址；</li>\n</ul>\n<h3 id=\"9.5-可选参数\">9.5 可选参数<a title=\"#9.5-可选参数\" href=\"#9.5-可选参数\"></a></h3>\n<ul>\n<li>-h, –help： 显示帮助信息，然后退出；</li>\n<li>-c 配置文件, –config 配置文件：配置文件的路径 (默认: /etc/letsencrypt/cli.ini或 ~/.config/letsencrypt/cli.ini)；</li>\n<li>-v, –verbose：当前参数可以重复使用多次来增加输出信息的详细程度，例如 -vvv.(默认: -2)；</li>\n<li>-n, –non-interactive, –noninteractive：非交互式运行，即运行过程中不需要询问用户输入，但需要额外的命令行参数。当客户端发现参数缺失时会给出相应的说明。(默认: False)；</li>\n<li>–force-interactive：无论Certbot是否以命令行的方式运行，强制交互式运行。当前参数不能用于renew子命令。(默认: False)</li>\n<li>-d 域名列表, –domains 域名列表, –domain 域名列表：指定域名列表。如果有多个域名，可以多次使用-d参数，也可以在-d参数后使用逗号分隔的域名列表。(默认: 询问)；</li>\n<li>–cert-name 证书名称：指定证书名称。每次Certbot运行只使用一个证书名称。可以使用命令’certbot certificates’查看已生成的证书名称。当创建新的证书时，此选项用于指定证书的名称。(默认: 无)</li>\n<li>–dry-run：使用客户端执行一次试运行，获取测试证书(无效的证书)但不保存到磁盘。当前选项仅用于’certonly’和’renew’子命令。</li>\n</ul>\n<blockquote>\n<p>注: 尽管 –dry-run 选项试图阻止任何对系统的修改，但并不能做到完全避免: 如果使用类似apache或nginx网页服务器来认证插件，程序运行过程中，会尝试修改或恢复配置文件来获取测试证书，也会重启网页服务器来部署和回滚这些修改。如果定义了–pre-hook和–post-hook选项它们会被同时执行，这两个选项有助于更精确地模拟更新证书。–renew-hook 选项在这里不会被执行。(默认: False)</p>\n</blockquote>\n<ul>\n<li>–preferred-challenges PREF_CHALLS：A sorted, comma delimited list of the preferred challenge to use during authorization with the most preferred challenge listed first (Eg, “dns” or “tls-sni-01,http,dns”). Not all plugins support all challenges. See <a href=\"https://certbot.eff.org/docs/using.html#plugins\">https://certbot.eff.org/docs/using.html#plugins</a> for details. ACME Challenges are versioned, but if you pick “http” rather than “http-01”, Certbot will select the latest version automatically. (default: [])；</li>\n<li>–user-agent 用户代理：设置本客户端的用户代理信息。用户代理信息用于CA机构收集关于操作系统和插件的使用成功率。如果你希望隐藏此信息，设置此选项为””。(默认: CertbotACMEClient/0.12.0 (Ubuntu 16.04.2 LTS) Authenticator/XXX Installer/YYY)。</li>\n</ul>\n","prev":{"title":"Laravel后端问题整理","link":"Learning/ab11027998a1"},"next":{"title":"Nginx站点配置","link":"Learning/a6fb2798339e"},"plink":"https://blog.jschef.com/Learning/97cad6591dc5/","toc":[{"id":"一、本文环境","title":"一、本文环境","index":"1"},{"id":"二、关于apache","title":"二、关于Apache","index":"2"},{"id":"三、获取步骤","title":"三、获取步骤","index":"3","children":[{"id":"3.1-确保网站能访问","title":"3.1 确保网站能访问","index":"3.1"},{"id":"3.2-添加ppa源","title":"3.2 添加PPA源","index":"3.2"},{"id":"3.3-安装python3","title":"3.3 安装Python3","index":"3.3"},{"id":"3.4-安装certbot","title":"3.4 安装Certbot","index":"3.4"},{"id":"3.5-获取并安装证书","title":"3.5 获取并安装证书","index":"3.5"}]},{"id":"四、多个域名使用同一证书","title":"四、多个域名使用同一证书","index":"4"},{"id":"五、手动安装域名","title":"五、手动安装域名","index":"5"},{"id":"六、nginx手动配置http转https","title":"六、Nginx手动配置http转https","index":"6"},{"id":"七、到期更新","title":"七、到期更新","index":"7"},{"id":"八、到期自动更新","title":"八、到期自动更新","index":"8"},{"id":"九、附：certbot命令","title":"九、附：Certbot命令","index":"9","children":[{"id":"9.1-用法","title":"9.1 用法","index":"9.1"},{"id":"9.2-获取,-安装,-更新证书","title":"9.2 获取, 安装, 更新证书","index":"9.2"},{"id":"9.3-证书管理","title":"9.3 证书管理","index":"9.3"},{"id":"9.4-管理你的let’s-encrypt账户","title":"9.4 管理你的Let’s Encrypt账户","index":"9.4"},{"id":"9.5-可选参数","title":"9.5 可选参数","index":"9.5"}]}],"reward":true,"copyright":{"author":"Chef Wu","link":"<a href=\"https://blog.jschef.com/Learning/97cad6591dc5/\" title=\"Nginx用certbot获取Let's Encrypt SSL证书\">https://blog.jschef.com/Learning/97cad6591dc5/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"August 14, 2019"}}