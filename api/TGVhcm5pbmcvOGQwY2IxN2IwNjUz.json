{"title":"Vue学习-组件data和render","date":"2019-07-19T09:00:00.000Z","date_formatted":{"ll":"Jul 19, 2019","L":"07/19/2019","MM-DD":"07-19"},"link":"Learning/8d0cb17b0653","tags":["JavaScript","Vue"],"categories":["Learning"],"updated":"2023-11-14T12:07:06.466Z","content":"<h2 id=\"vue组件data\">Vue组件data<a title=\"#vue组件data\" href=\"#vue组件data\"></a></h2>\n<p>在之前我使用vue.js时，实例Vue中的data是直接赋值一个对象的。但是，在看过公司项目的Vue项目时，发现data是用函数返回的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">data</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看学习官方文档后，理解了在组件使用中，组件的data必须是一个函数。因为在使用组件时，一个页面可能有多个组件同时使用，改变组件Vue实例data，时，其他组件data会同时受到影响。但通过data使用匿名函数，可以保证页面内每一个实例是独立的data。</p>\n<h2 id=\"vue-render\">Vue render<a title=\"#vue-render\" href=\"#vue-render\"></a></h2>\n<p>Vue在绝大多数情况下是使用 template，然而在某些特定的场景中，我们需要JavaScript创建一些简单html。比如公司项目的表格最后一列编辑选项按钮，是用一个div突出固定显示在表格右侧的。render基本用法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">render</span>: <span class=\"keyword\">function</span> (<span class=\"params\">createElement</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>, [</span><br><span class=\"line\">\tcreateElement (<span class=\"string\">&#x27;Button&#x27;</span>, &#123;<span class=\"attr\">props</span>: &#123; &#125;, <span class=\"attr\">style</span>: &#123; &#125;, <span class=\"attr\">on</span>: &#123; &#125;&#125;&#125;, <span class=\"string\">&#x27;文字&#x27;</span>),</span><br><span class=\"line\">])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一般render创建的html不是静态的，需要在传入一个参数对象，对新建的html进行设计。</p>\n","prev":{"title":"Vue学习-项目搭建","link":"Learning/0942d62fb0f3"},"next":{"title":"canvas学习","link":"Learning/973f37045c68"},"plink":"https://blog.jschef.com/Learning/8d0cb17b0653/","toc":[{"id":"vue组件data","title":"Vue组件data","index":"1"},{"id":"vue-render","title":"Vue render","index":"2"}],"reward":true,"copyright":{"author":"Chef Wu","link":"<a href=\"https://blog.jschef.com/Learning/8d0cb17b0653/\" title=\"Vue学习-组件data和render\">https://blog.jschef.com/Learning/8d0cb17b0653/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"July 19, 2019"}}