{"title":"JavaScript新特性","date":"2020-08-07T13:49:12.000Z","date_formatted":{"ll":"Aug 7, 2020","L":"08/07/2020","MM-DD":"08-07"},"thumbnail":"/images/20200807/cover.jpg","link":"Learning/75dfaa707e38","tags":["ES6","JavaScript"],"categories":["Learning"],"updated":"2023-11-14T12:07:06.466Z","content":"<h2 id=\"一、前言\">一、前言<a title=\"#一、前言\" href=\"#一、前言\"></a></h2>\n<p>我这里总结了一下ES6+中，一些比较实用的新特性。我们日常开发应该尽快使用这些新特性，能极大地提高我们的开发效率。</p>\n<p>我刚开始实习的时候，对ES6都不太怎么了解，工作后学习并渐渐运用起来，越用越爽，两个字：简洁方便高效。</p>\n<p>提一句：<strong>只要用了babel，所有的新特性请放心大胆地用</strong>。</p>\n<h2 id=\"二、你得尽快用上的“新特性”\">二、你得尽快用上的“新特性”<a title=\"#二、你得尽快用上的“新特性”\" href=\"#二、你得尽快用上的“新特性”\"></a></h2>\n<blockquote>\n<p>为什么加引号，因为现在这些都不是多新的特性了，ES6是2015年就出了，到现在已经5年了。</p>\n</blockquote>\n<h3 id=\"2.1-模板字符串\">2.1 模板字符串<a title=\"#2.1-模板字符串\" href=\"#2.1-模板字符串\"></a></h3>\n<p><strong>模版字符串</strong>：用 `（反引号）标识，用 ${} 将变量括起来</p>\n<p><strong>old</strong>：</p>\n<p>场景：通常我们在自定义一些echarts或者地图上添加东西时，我们常会拼接一些html代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> html = <span class=\"string\">&#x27;&lt;div style=&quot;color: &#x27;</span> + color + <span class=\"string\">&#x27;;&quot;&gt;&#x27;</span> + str + <span class=\"string\">&#x27;&lt;div&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>传统做法需要使用大量的“”（引号）和 + 来拼接才能得到我们需要的模版</p>\n<p><strong>new</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> html = <span class=\"string\">`&lt;div style=&quot;color: <span class=\"subst\">$&#123;color&#125;</span> ;&quot;&gt; <span class=\"subst\">$&#123;str&#125;</span> &lt;div&gt;`</span></span><br></pre></td></tr></table></figure>\n<p><code>$&#123;&#125;</code> 里可以放任意的JavaScript表达式，也可以调用函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"number\">8</span>, price = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`加购一个后数量：<span class=\"subst\">$&#123;++count&#125;</span>, 总价：<span class=\"subst\">$&#123;count*price&#125;</span>`</span>);   <span class=\"comment\">// 加购一个后数量：9, 总价：90</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`输出个字符串：<span class=\"subst\">$&#123;<span class=\"string\">&#x27;cool&#x27;</span>&#125;</span>`</span>); <span class=\"comment\">// 输出个字符串：cool</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myLove</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;as you love!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`I love <span class=\"subst\">$&#123;myLove()&#125;</span>`</span>);   <span class=\"comment\">// I love as you love!</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>需要注意的几个问题</strong>：</p>\n<ol>\n<li>\n<p>当需要在字符串里使用反引号的时候，需要转义；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`模版字符串：用 \\`（反引号）标识`</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>如果<code>$&#123;&#125;</code>中的变量不是字符串类型，那么会按照一般的规则转化为字符串；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>, <span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`a = <span class=\"subst\">$&#123;obj&#125;</span>`</span>);   <span class=\"comment\">// a = [object Object]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>模板字符串会保留所有的空格、缩进和换行；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`I know   </span></span><br><span class=\"line\"><span class=\"string\">\t, you know!`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\"><span class=\"comment\">//  I know   </span></span><br><span class=\"line\"><span class=\"comment\">//\t , you know!</span></span><br></pre></td></tr></table></figure>\n<p>解决方案：使用<code>\\</code>解决换行符；使用<code>+</code>换行拼接；使用正则替换；使用变量替换；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`I know   \\</span></span><br><span class=\"line\"><span class=\"string\">\t, you know!`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);  <span class=\"comment\">// I know   \t, you know!</span></span><br><span class=\"line\"></span><br><span class=\"line\">str = <span class=\"string\">`I know   `</span></span><br><span class=\"line\">\t+ <span class=\"string\">`, you know!`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str); <span class=\"comment\">// I know   , you know!</span></span><br><span class=\"line\"></span><br><span class=\"line\">str = (<span class=\"string\">`I know</span></span><br><span class=\"line\"><span class=\"string\">\t, you know!`</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s+/gm</span>, <span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str); <span class=\"comment\">// I know , you know!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> N = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">str = (<span class=\"string\">`I know<span class=\"subst\">$&#123;</span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\">\t\tN&#125;</span>, you know<span class=\"subst\">$&#123;</span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\">\t\tN&#125;</span>, all we know!`</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str); <span class=\"comment\">// I know, you know, all we know!</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>扩展了解</strong>：</p>\n<p>实现原理（未验证）：通过正则匹配，替换原字符串中的变量。包括常见的<code>{{}}</code>, <code>&lt;%=xx%&gt;</code>等</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">replace</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\$\\&#123;([^&#125;])\\&#125;/g</span>,<span class=\"keyword\">function</span>(<span class=\"params\">matched,key</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"built_in\">eval</span>(key)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2.2-属性简写\">2.2 属性简写<a title=\"#2.2-属性简写\" href=\"#2.2-属性简写\"></a></h3>\n<p><strong>old</strong>：</p>\n<p>一个属性名对应一个值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> pageIndex = <span class=\"number\">0</span>, pageSize = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    <span class=\"attr\">pageNum</span>: pageIndex,</span><br><span class=\"line\">    <span class=\"attr\">pageSize</span>: pageSize</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>new</strong>：</p>\n<p>属性名和变量名保持一致，变量名尽量迎合属性名；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> pageNum = <span class=\"number\">0</span>, pageSize = <span class=\"number\">10</span>, password = <span class=\"string\">&#x27;123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    pageNum,</span><br><span class=\"line\">    pageSize,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: <span class=\"title function_\">encrypt</span>(password)  <span class=\"comment\">// 属性简写和键值对可以混写</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// const params = &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     pageNum: pageNum,</span></span><br><span class=\"line\"><span class=\"comment\">//     pageSize: pageSize</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>question</strong>：</p>\n<ol>\n<li>\n<p>如果我们的需要的值不是一个单独变量，而是从某个对象取出属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> pageNum = <span class=\"number\">0</span>, pageSize = <span class=\"number\">10</span>, user = &#123;<span class=\"attr\">uid</span>: <span class=\"number\">100000</span>, <span class=\"attr\">password</span>: <span class=\"string\">&#x27;123123&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    pageNum,</span><br><span class=\"line\">    pageSize,</span><br><span class=\"line\">    user.<span class=\"property\">password</span>  ????</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案：见第四章</p>\n</li>\n</ol>\n<h3 id=\"2.3-方法属性\">2.3 方法属性<a title=\"#2.3-方法属性\" href=\"#2.3-方法属性\"></a></h3>\n<p><strong>old</strong>：</p>\n<p>一个属性名对应一个值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> math = &#123;</span><br><span class=\"line\">  <span class=\"attr\">add</span>: <span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a + b; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">sub</span>: <span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a - b; &#125;, </span><br><span class=\"line\">  <span class=\"attr\">multiply</span>: <span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a * b; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>new</strong>：</p>\n<p>自动识别方法名称作为属性名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> math = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">add</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a + b; &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">sub</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a - b; &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">multiply</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a * b; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>取函数名为属性名称</p>\n<p><strong>微信小程序page结构</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Page</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">isShowloading</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">onLoad</span>(<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    onReady () &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_\">handleTap</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 给page传入一个对象，这个对象的所有函数都可以进行属性名简写</span></span><br></pre></td></tr></table></figure>\n<p><strong>question</strong>:</p>\n<p>下面两个表达式都正确吗？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>)&#123;&#125;.<span class=\"title function_\">bind</span>() </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">fn2</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;.<span class=\"title function_\">bind</span>() </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2.4-箭头函数\">2.4 箭头函数<a title=\"#2.4-箭头函数\" href=\"#2.4-箭头函数\"></a></h3>\n<p>箭头函数表达方式：<code>=&gt;</code>，因为像个箭头，所以叫箭头函数。</p>\n<p><strong>old</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">function</span> (<span class=\"params\">v</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>new</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 写法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">f</span> = v =&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 完整写法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">f</span> = (<span class=\"params\">v</span>) =&gt; &#123; <span class=\"keyword\">return</span> v; &#125;;</span><br></pre></td></tr></table></figure>\n<p>如上，当函数只有一个形参时，<code>=&gt;</code>左侧可以省略<code>()</code>；</p>\n<p>当函数返回值可以用一句简单表达式表示时，<code>=&gt;</code>右侧可以省略<code>&#123;&#125;</code>和<code>return</code>；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">f</span> = (<span class=\"params\"></span>) =&gt; <span class=\"number\">5</span>;   <span class=\"comment\">// ()不可省略</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">sum</span> = (<span class=\"params\">num1, num2</span>) =&gt; num1 + num2;</span><br><span class=\"line\"><span class=\"comment\">//var sun = function(num1, num2)&#123;return num1 + num2;&#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">httpUtil</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;xxxxxx.vm&#x27;</span>, params, <span class=\"literal\">true</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>question</strong>:</p>\n<p>以下会输出什么？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">getTempItem</span> = (<span class=\"params\"></span>) =&gt; &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;s8309a82n&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;Temp&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"title function_\">getTempItem</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"2.5-“你懂的”运算符\">2.5 “你懂的”运算符<a title=\"#2.5-“你懂的”运算符\" href=\"#2.5-“你懂的”运算符\"></a></h3>\n<p>Spread operator，这个中文名称有好几种说法（扩展运算符、延展操作符、展开运算符等等），而我给它起的名字就叫<strong>你懂的运算符</strong>。它表示方法前面见过了<code>...</code>，作用是可以将数组、字符串、对象等在语法层面上展开。</p>\n<p><strong>秘诀</strong>：<code>给我“解压”到这里</code></p>\n<ol>\n<li>\n<p>“解压”数组</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rgb = [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> colors = [...rgb]; <span class=\"comment\">// 巴啦啦魔仙变，给我把rgb解压到这个数组里</span></span><br><span class=\"line\"><span class=\"comment\">// 结果： [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> colorList = [<span class=\"string\">&#x27;yellow&#x27;</span>, ...rgb]; <span class=\"comment\">// [&#x27;yellow&#x27;, &#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([...colors, ...colorList]);  <span class=\"comment\">// ????</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>“解压”对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> you = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;DJ&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">16</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">you = &#123;</span><br><span class=\"line\">    ...you,</span><br><span class=\"line\">    <span class=\"attr\">school</span>: <span class=\"string\">&#x27;DLPU&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// &#123;name: &quot;DJ&quot;, age: 16, school: &quot;DLPU&quot;&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>“解压”字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myCountry = <span class=\"string\">&#x27;China&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([...myCountry]);  <span class=\"comment\">// [&quot;C&quot;, &quot;h&quot;, &quot;i&quot;, &quot;n&quot;, &quot;a&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 等同于：console.log(myCountry.split(&#x27;&#x27;))</span></span><br><span class=\"line\"></span><br><span class=\"line\">cosnt resStr = &#123;...myCountry&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resStr);  <span class=\"comment\">// &#123;0: &quot;C&quot;, 1: &quot;h&quot;, 2: &quot;i&quot;, 3: &quot;n&quot;, 4: &quot;a&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 问题：怎么取值呢？  resStr[0]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>question</strong>:</p>\n<p>以下分别会输出什么？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(&#123;<span class=\"attr\">a</span>: <span class=\"number\">0</span>, ...obj&#125;); </span><br><span class=\"line\">????</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(&#123;...arr&#125;)</span><br><span class=\"line\">????</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([...obj]);</span><br><span class=\"line\">????</span><br></pre></td></tr></table></figure>\n<p><strong>扩展了解</strong>：见下一章</p>\n<h3 id=\"2.6-解构赋值\">2.6 解构赋值<a title=\"#2.6-解构赋值\" href=\"#2.6-解构赋值\"></a></h3>\n<p><strong>old</strong>:</p>\n<p>获取对象中的值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// res = &#123;status: 200, data: &#123;uid: &#x27;ed9fa0&#x27;, name: &#x27;DJ&#x27;, time: &#x27;1596808152&#x27;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">thsService</span>.<span class=\"title function_\">getLog</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> status = res.<span class=\"property\">status</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = res.<span class=\"property\">data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = res.<span class=\"property\">data</span>.<span class=\"property\">name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> time = res.<span class=\"property\">data</span>.<span class=\"property\">time</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(status, data, name, time);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>new</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">thsService</span>.<span class=\"title function_\">getLog</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; status, data &#125; = res;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; status, data, <span class=\"attr\">data</span>: &#123; name, time &#125; &#125; = res;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// console.log(status, data, name, time);</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以这样写</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">thsService</span>.<span class=\"title function_\">getLog</span>().<span class=\"title function_\">then</span>(&#123; status, data &#125;=&gt;&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(status, data);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>数组</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c] = arr;     <span class=\"comment\">// a=1, b=2, c=3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, b, , d] = arr;\t <span class=\"comment\">// a=1, b=2, d=4</span></span><br></pre></td></tr></table></figure>\n<p><strong>默认值</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; status = <span class=\"number\">500</span>, data = <span class=\"literal\">null</span> &#125; = res;</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a=<span class=\"number\">0</span>, b=<span class=\"number\">0</span>, c=<span class=\"number\">0</span>, d=<span class=\"number\">0</span>, e=<span class=\"number\">0</span>] = arr;</span><br></pre></td></tr></table></figure>\n<p><strong>扩展了解</strong>：</p>\n<p>剩余运算符（ES2018）</p>\n<p><strong>秘诀</strong>：<code>“剩下的”都是我的</code></p>\n<ol>\n<li>\n<p>“剩下的”属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>, <span class=\"attr\">c</span>: <span class=\"function\"><span class=\"params\">_</span> =&gt;</span> _&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;b, ...rest&#125; = obj;  <span class=\"comment\">// rest说：b属性你拿走吧，剩下的全是我的</span></span><br><span class=\"line\">b   \t\t<span class=\"comment\">// 2</span></span><br><span class=\"line\">rest\t\t<span class=\"comment\">// &#123;a: 1, c: ƒ&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>“剩下的”参数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">restParam</span> = (<span class=\"params\">p1, p2, ...p3</span>) =&gt; &#123;  <span class=\"comment\">// p3说：前两个参数你们拿走，剩下的都是我的了</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1, p2, p3);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">restParam</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);   <span class=\"comment\">// p1 = 1, p2 = 2, p3 = [3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"2.7-数组新方法\">2.7 数组新方法<a title=\"#2.7-数组新方法\" href=\"#2.7-数组新方法\"></a></h3>\n<ul>\n<li><code>find(): any</code>：返回找到满足条件的第一项，否则返回undefined</li>\n<li><code>findIndex(): number</code>：找到满足条件的一项的索引</li>\n<li><code>includes(): boolean</code>：是否包含一个值</li>\n</ul>\n<p>在ES6之前，要判断一个数组中是否包含一个元素，是通过<code>indexOf()</code>返回不等于<code>-1</code></p>\n<p>ES6之后，相继扩充一些方法：</p>\n<p><code>find( fn(item, [index], [arr]) )</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [&#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">checked</span>: <span class=\"literal\">true</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"title class_\">NaN</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">arr.<span class=\"title function_\">find</span>( <span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">id</span> === <span class=\"number\">1</span> );  <span class=\"comment\">// &#123; id: 1, checked: true &#125;</span></span><br><span class=\"line\">arr.<span class=\"title function_\">find</span>( <span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">is</span>(<span class=\"title class_\">NaN</span>, item) );  <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n<p>find会将每一个元素挨个去运行回调函数，找到了第一项之后就不会再执行了；</p>\n<p><code>findIndex( fn(item, [index], [arr]) )</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">findIndex</span>( <span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">id</span> === <span class=\"number\">1</span> );  <span class=\"comment\">// 0</span></span><br><span class=\"line\">arr.<span class=\"title function_\">findIndex</span>( <span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">is</span>(<span class=\"title class_\">NaN</span>, item) );  <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n<p><code>includes(value, fromIdx)</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">includes</span>(<span class=\"number\">3</span>);         <span class=\"comment\">// true</span></span><br><span class=\"line\">arr.<span class=\"title function_\">includes</span>(<span class=\"title class_\">NaN</span>);       <span class=\"comment\">// true</span></span><br><span class=\"line\">arr.<span class=\"title function_\">includes</span>(&#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;)  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a1 = &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>&#125;, a2 = &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">a1 == a2;          <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = [a1, a2];  <span class=\"comment\">// [&#123;id: 2&#125;, &#123;id: 2&#125;]</span></span><br><span class=\"line\">a.<span class=\"title function_\">includes</span>(a2);    <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>字符串同样存在<code>includes</code>方法：<code>'Made in China'.includes('o')</code>, false</p>\n<p><code>some( fn(item, [index], [arr]) )</code>：是否存在满足条件的一项，和includes是同样的作用。</p>\n<p>区别（优缺点）：<code>some</code>传入的是回调函数，具有更强大的可操性；<code>includes</code>传入参数是具体的值，书写简便。</p>\n<p><strong>question</strong>:</p>\n<p>find()只能取出满足条件的一项，那如何取出数组中满足条件的所有项呢？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [&#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">checked</span>: <span class=\"literal\">true</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span> &#125;, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"title class_\">NaN</span>];</span><br><span class=\"line\"><span class=\"comment\">// ???? </span></span><br></pre></td></tr></table></figure>\n<p><strong>扩展</strong>：<a href=\"https://www.runoob.com/jsref/jsref-obj-array.html\" target=\"_blank\">数组所有方法参考手册</a></p>\n<h3 id=\"2.8-promise、async/await\">2.8 Promise、async/await<a title=\"#2.8-promise、async/await\" href=\"#2.8-promise、async/await\"></a></h3>\n<ul>\n<li>\n<p>回调地狱：“无限”（大量）地使用嵌套回调函数，好像掉进了18层地狱</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一个动画的回调地狱例子</span></span><br><span class=\"line\"><span class=\"title function_\">animate</span>(ball1, <span class=\"number\">100</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">200</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">animate</span>(ball3, <span class=\"number\">300</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">animate</span>(ball1, <span class=\"number\">200</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">animate</span>(ball3, <span class=\"number\">200</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">180</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">220</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">              <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">200</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;over&quot;</span>);</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;) </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// promise优化后</span></span><br><span class=\"line\"><span class=\"title function_\">promiseAnimate</span>(ball1, <span class=\"number\">500</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball2, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball3, <span class=\"number\">300</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball1, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball3, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball2, <span class=\"number\">180</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball2, <span class=\"number\">220</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">promiseAnimate</span>(ball2, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// async/await优化后</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">play</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball1, <span class=\"number\">500</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">200</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball3, <span class=\"number\">300</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball1, <span class=\"number\">200</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball4, <span class=\"number\">200</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">180</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">220</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">animate</span>(ball2, <span class=\"number\">200</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>Promise</strong>:</p>\n<p>基本用法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUserData</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolved, rejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">            type : <span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">            url : <span class=\"string\">&quot;api.com&quot;</span>,</span><br><span class=\"line\">            success : <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res.<span class=\"property\">isSuccess</span>) &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">resolved</span>(res.<span class=\"property\">data</span>);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">rejected</span>(&#123;<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;服务器错误&#x27;</span>, <span class=\"attr\">info</span>: res.<span class=\"property\">errmsg</span>&#125;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">rejected</span>(&#123;<span class=\"attr\">msg</span>: <span class=\"string\">&#x27;网络错误&#x27;</span>, <span class=\"attr\">info</span>: err&#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">getUserData</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;success:&#x27;</span>, data);</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">msg</span>, err.<span class=\"property\">info</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 此外介绍一个方法，并行跑promise es2020有个新方法Promise.allSettled</span></span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([promise1, promise2, ...]).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res); <span class=\"comment\">// 由promise1,promise2正确执行结果组成的数组</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\"> \t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>async/await</strong>：</p>\n<p>是对Promise的优化，为Promise服务。一句话：<strong>用同步的风格写异步代码</strong>。</p>\n<p>基础用法：<a href=\"https://www.zzboy.cn/post/1589841597\">https://www.zzboy.cn/post/1589841597</a></p>\n<p>需要注意：</p>\n<ul>\n<li>async/await 就是一对“海尔兄弟”，缺一不可。<code>async</code>声明一个函数（函数返回会处理成一个Promise），函数里面必须要有<code>await</code>，await标识一个需要等一会（异步）的操作。函数内部使用了await，那么该函数就必须用async声明。</li>\n<li>await、return和return await的陷阱：<a href=\"https://jakearchibald.com/2017/await-vs-return-vs-return-await/\">https://jakearchibald.com/2017/await-vs-return-vs-return-await/</a></li>\n</ul>\n<h3 id=\"2.9-modules\">2.9 Modules<a title=\"#2.9-modules\" href=\"#2.9-modules\"></a></h3>\n<p>模块化是ES6比较重要的特性，在此之前JS是不支持原生的模块化的，需要通过第三方库实现如RequireJS。</p>\n<blockquote>\n<p>了解更多模块化：<a href=\"https://ths-fe.github.io/2020/05/29/JavaScript%E6%A8%A1%E5%9D%97%E5%8C%96/\" target=\"_blank\">JavaScript模块化</a></p>\n</blockquote>\n<p>模块化由<code>export</code> 和  <code>import</code> 组成，ES6视一个文件为一个模块，文件内通过export对外暴露接口，其他文件通过import引入使用。</p>\n<p>export：可导出变量、常量和函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// utils/test.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单个导出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;Patrick Jun&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pi = <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">whoIAm</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;I&#x27;m a FE coder!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于（会将export作为一个对象导出）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;Patrick Jun&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> pi = <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">whoIAm</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;I&#x27;m a FE coder!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; name, pi, whoIAm &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this is an object, so.</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; <span class=\"attr\">name</span>: name, <span class=\"attr\">PI</span>: pi, <span class=\"attr\">iAm</span>: whoIAm &#125;;</span><br></pre></td></tr></table></figure>\n<p>import：导入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// home.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; name, pi, whoIAm &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./utils/test.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name, pi);</span><br><span class=\"line\"><span class=\"title function_\">whoIAm</span>();</span><br><span class=\"line\"><span class=\"comment\">// Patrick Jun 3.141592653589793      main.js:2 </span></span><br><span class=\"line\"><span class=\"comment\">// I&#x27;m a FE coder!                    test.js:11  </span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>node无法直接运行module：<a href=\"https://nodejs.org/dist/latest-v10.x/docs/api/esm.html\">https://nodejs.org/dist/latest-v10.x/docs/api/esm.html</a></p>\n</blockquote>\n<p>default：只能有一个</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// math.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">sub</span>(<span class=\"params\">a,b</span>) &#123; <span class=\"keyword\">return</span> a - b; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (a,b) =&gt; a * b;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mult, &#123; add, sub &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./math&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、你可以尝试的新特性\">三、你可以尝试的新特性<a title=\"#三、你可以尝试的新特性\" href=\"#三、你可以尝试的新特性\"></a></h2>\n<h3 id=\"3.1-对象新方法\">3.1 对象新方法<a title=\"#3.1-对象新方法\" href=\"#3.1-对象新方法\"></a></h3>\n<ul>\n<li>\n<p>Object.values(obj): 返回由对象zhogn suozhi 组成的数组；</p>\n</li>\n<li>\n<p>Object.entries(obj): 返回对象的每个属性建和值组成的数组：<code>[[key, value],[key, value]]</code></p>\n</li>\n</ul>\n<p>之前通过<code>Object.keys()</code>，可以获取到对象的所有的key，而要获得value值的时候：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">value</span>: <span class=\"string\">&#x27;123&#x27;</span>, <span class=\"attr\">data</span>: &#123;<span class=\"attr\">code</span>: <span class=\"string\">&#x27;EC109&#x27;</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(obj); <span class=\"comment\">// [&quot;id&quot;, &quot;value&quot;, &quot;data&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(obj).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[key]); <span class=\"comment\">// [1, &quot;123&quot;, &#123;code: &#x27;EC109&#x27;&#125;]</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Object.values()：无需先获取键名，直接可以拿到所有值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(obj); <span class=\"comment\">// [1, &quot;123&quot;, &#123;code: &#x27;EC109&#x27;&#125;]</span></span><br></pre></td></tr></table></figure>\n<p>Object.entries():</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">entries</span>(obj).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">[key, value]</span>) =&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key + <span class=\"string\">&quot;: &quot;</span> + value);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// id: 1</span></span><br><span class=\"line\"><span class=\"comment\">// value: 123</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3.2-**\">3.2 **<a title=\"#3.2-**\" href=\"#3.2-**\"></a></h3>\n<p>指数操作符：类似数学的书写方式进行指数计算，可以看做是<code>Math.pow()</code>的简写</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">7</span> ** <span class=\"number\">3</span>;   <span class=\"comment\">// a = 343，等同于 a = Math.pow(7, 3)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3.3--??\">3.3  ??<a title=\"#3.3--??\" href=\"#3.3--??\"></a></h3>\n<p>当我们查询某个属性时，经常会给没有该属性就设置一个默认的值，比如下面两种方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> c = a ? a : b <span class=\"comment\">// 方式1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = a || b <span class=\"comment\">// 方式2</span></span><br></pre></td></tr></table></figure>\n<p>这两种方式有个明显的弊端，它都会覆盖所有的假值，如(0, ‘’, false)，这些值可能是在某些情况下有效的输入。</p>\n<p>空位合并操作符，用 ?? 表示。如果表达式在??的左侧运算符求值为 <strong>undefined 或 null</strong>，就返回其右侧默认值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> c = a ?? b;</span><br><span class=\"line\"><span class=\"comment\">// 等价于let c = a !== undefined &amp;&amp; a !== null ? a : b;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3.4-padstart/padend\">3.4 padStart/padEnd<a title=\"#3.4-padstart/padend\" href=\"#3.4-padstart/padend\"></a></h3>\n<p>用于在字符串开头或结尾添加填充字符串（ES2017）</p>\n<ul>\n<li>padStart(maxLength, [fillString])：从前面补充字符</li>\n<li>padEnd(maxLength, [fillString])：从后面补充字符</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>);          <span class=\"comment\">// &#x27;es8&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">5</span>);          <span class=\"comment\">// &#x27;  es8&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;woof&#x27;</span>);  <span class=\"comment\">// &#x27;wooes8&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">14</span>, <span class=\"string\">&#x27;wow&#x27;</span>);  <span class=\"comment\">// &#x27;wowwowwowwoes8&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">7</span>, <span class=\"string\">&#x27;0&#x27;</span>);     <span class=\"comment\">// &#x27;0000es8&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">2</span>);          <span class=\"comment\">// &#x27;es8&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">5</span>);          <span class=\"comment\">// &#x27;es8  &#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;woof&#x27;</span>);  <span class=\"comment\">// &#x27;es8woo&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">14</span>, <span class=\"string\">&#x27;wow&#x27;</span>);  <span class=\"comment\">// &#x27;es8wowwowwowwo&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;es8&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">7</span>, <span class=\"string\">&#x27;6&#x27;</span>);     <span class=\"comment\">// &#x27;es86666&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>应用场景：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">    <span class=\"string\">`<span class=\"subst\">$&#123;dt.getFullYear()+<span class=\"string\">&#x27;&#x27;</span>&#125;</span>-`</span></span><br><span class=\"line\">    +<span class=\"string\">`<span class=\"subst\">$&#123;(dt.getMonth()+<span class=\"number\">1</span>+<span class=\"string\">&#x27;&#x27;</span>).padStart(<span class=\"number\">2</span>, <span class=\"string\">&#x27;0&#x27;</span>)&#125;</span>-`</span></span><br><span class=\"line\">    +<span class=\"string\">`<span class=\"subst\">$&#123;(dt.getDate()+<span class=\"string\">&#x27;&#x27;</span>).padStart(<span class=\"number\">2</span>, <span class=\"string\">&#x27;0&#x27;</span>)&#125;</span>`</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// 2020-08-07</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> timestamp = <span class=\"string\">&#x27;1596808152&#x27;</span>;</span><br><span class=\"line\">timestamp = +<span class=\"title class_\">String</span>(timestamp).<span class=\"title function_\">padEnd</span>(<span class=\"number\">13</span>, <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 1596808152000</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、答案\">四、答案<a title=\"#四、答案\" href=\"#四、答案\"></a></h2>\n<p><strong>2.2 question</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> pageNum = <span class=\"number\">0</span>, pageSize = <span class=\"number\">10</span>, user = &#123;<span class=\"attr\">uid</span>: <span class=\"number\">100000</span>, <span class=\"attr\">password</span>: <span class=\"string\">&#x27;123123&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    pageNum,</span><br><span class=\"line\">    pageSize,</span><br><span class=\"line\">    ...user</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// &#123;pageNum: 0, pageSize: 10, uid: 100000, password: &quot;123123&quot;&#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>2.3 question</strong>:  obj1错误，obj2正确。简写方法的属性名总是变量本身作为字符串使用，bind函数本身返回一个函数，从解析器角度来说，这个返回的函数叫什么名字并没有办法确定，而第二种写法，是确定好了<code>fn2</code></p>\n<p><strong>2.4 question</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Uncaught</span> <span class=\"title class_\">SyntaxError</span>: <span class=\"title class_\">Unexpected</span> token <span class=\"string\">&#x27;:&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">getTempItem</span> = id =&gt; (&#123; id, <span class=\"attr\">name</span>: <span class=\"string\">&quot;Temp&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>2.5 question</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"number\">0</span>: <span class=\"number\">2</span>, <span class=\"number\">1</span>: <span class=\"number\">3</span>, <span class=\"number\">2</span>: <span class=\"number\">4</span>&#125;   <span class=\"comment\">// result.0 ????</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">VM37</span>:<span class=\"number\">1</span> <span class=\"title class_\">Uncaught</span> <span class=\"title class_\">TypeError</span>: obj is not iterable</span><br><span class=\"line\">    at &lt;anonymous&gt;:<span class=\"number\">1</span>:<span class=\"number\">17</span></span><br></pre></td></tr></table></figure>\n<p><strong>2.7 question</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">filter</span>( <span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">id</span> === <span class=\"number\">2</span> );  <span class=\"comment\">// [&#123;id: 2&#125;, &#123;id: 2&#125;]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、参考资料\">五、参考资料<a title=\"#五、参考资料\" href=\"#五、参考资料\"></a></h2>\n<blockquote>\n<ol>\n<li><a href=\"https://dev.to/itnext/modern-javascript-10-things-you-should-be-using-starting-today-22dp\" target=\"_blank\">Modern JavaScript, 10 things you should be using, starting today - DEV</a></li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"2\">\n<li><a href=\"https://juejin.im/post/6844904018834096142\" target=\"_blank\">盘点ES7、ES8、ES9、ES10新特性</a></li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"3\">\n<li><a href=\"https://blog.csdn.net/weixin_43720095/article/details/89432584\" target=\"_blank\">ES6，ES7，ES8，ES9，ES10新特性一览</a></li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"4\">\n<li><a href=\"https://juejin.im/post/6844904080955932679\" target=\"_blank\">ES2020新特性</a></li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"5\">\n<li><a href=\"https://zhuanlan.zhihu.com/p/100251213\" target=\"_blank\">种草 ES2020 新特性</a></li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"6\">\n<li><a href=\"https://segmentfault.com/a/1190000016788484\" target=\"_blank\">异步Promise及Async/Await可能最完整入门攻略</a></li>\n</ol>\n</blockquote>\n<p><strong>刘哥金句</strong>：给别人讲述知识时可以发现自己掌握的是否牢固透彻，写的过程不断发现自己的不足，然后通过一些方式来解决问题，这也是一种学习过程；当然，给别人分享，也要从学习者的角度出发，考虑他们想要从你的分享中获得什么，还有就是你想表达些什么给他们。</p>\n","prev":{"title":"函数式编程范式","link":"Learning/86cd6788d8fb"},"next":{"title":"毕业设计-“跑鸭”微信小程序","link":"Learning/3029bde5b8fc"},"plink":"https://blog.jschef.com/Learning/75dfaa707e38/","toc":[{"id":"一、前言","title":"一、前言","index":"1"},{"id":"二、你得尽快用上的“新特性”","title":"二、你得尽快用上的“新特性”","index":"2","children":[{"id":"2.1-模板字符串","title":"2.1 模板字符串","index":"2.1"},{"id":"2.2-属性简写","title":"2.2 属性简写","index":"2.2"},{"id":"2.3-方法属性","title":"2.3 方法属性","index":"2.3"},{"id":"2.4-箭头函数","title":"2.4 箭头函数","index":"2.4"},{"id":"2.5-“你懂的”运算符","title":"2.5 “你懂的”运算符","index":"2.5"},{"id":"2.6-解构赋值","title":"2.6 解构赋值","index":"2.6"},{"id":"2.7-数组新方法","title":"2.7 数组新方法","index":"2.7"},{"id":"2.8-promise、async/await","title":"2.8 Promise、async&#x2F;await","index":"2.8"},{"id":"2.9-modules","title":"2.9 Modules","index":"2.9"}]},{"id":"三、你可以尝试的新特性","title":"三、你可以尝试的新特性","index":"3","children":[{"id":"3.1-对象新方法","title":"3.1 对象新方法","index":"3.1"},{"id":"3.2-**","title":"3.2 **","index":"3.2"},{"id":"3.3--??","title":"3.3  ??","index":"3.3"},{"id":"3.4-padstart/padend","title":"3.4 padStart&#x2F;padEnd","index":"3.4"}]},{"id":"四、答案","title":"四、答案","index":"4"},{"id":"五、参考资料","title":"五、参考资料","index":"5"}],"reward":true,"copyright":{"author":"Chef Wu","link":"<a href=\"https://blog.jschef.com/Learning/75dfaa707e38/\" title=\"JavaScript新特性\">https://blog.jschef.com/Learning/75dfaa707e38/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"August 7, 2020"}}